<launch>
  <!-- world param -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false" />

  <!-- Robot pose (Optional) -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- <rosparam file="$(find table_arm)/config/table_arm.yaml" command="load"/> -->
  
  <!-- create empty_world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find table_arm)/worlds/table_arm.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find table_arm)/urdf/table_arm.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node
    name="urdf_spawner"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    args="-urdf -model table_arm -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" />

  <!-- load the controllers -->
  <rosparam file="$(find table_arm)/config/table_arm.yaml" command="load"/>
  <node
    name="controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/table_arm"
    args="joint_state_controller
          first_joint_velocity_controller
          second_joint_velocity_controller
          third_joint_velocity_controller
          fourth_joint_velocity_controller
          fifth_joint_velocity_controller
          sixth_joint_velocity_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher"
    respawn="false"
    output="screen"
    ns="/table_arm"/>
</launch>
